# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run tests with Gradle
      run: ./gradlew test
    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: test results
        path: build/reports/tests/test
      if: always()

    - name: Build with Gradle
      run: ./gradlew buildPlugin
    - name: Upload build
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: build/distributions/intellij-mob-*.zip

    - uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow # selectable (default: repo,message)
      env:
        # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # optional
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
      if: always() # Pick up events even if the job fails or is canceled.